{"version":3,"file":"preview.const.js","sources":["../../../../packages/preview/preview.const.ts"],"sourcesContent":["import DocxPreview from './supports/docx-preview/index'\r\nimport XlsxPreview from './supports/xlsx-preview/index'\r\nimport PdfPreview from './supports/pdf-preview/index'\r\nimport PicPreview from './supports/pic-preview/index'\r\nimport TxtPreview from './supports/txt-preview/index'\r\nimport CodePreview from './supports/code-preview/index'\r\nimport MdPreview from './supports/md-preview/index'\r\nimport EpubPreview from './supports/epub-preview/index'\r\nimport AudioPreview from './supports/audio-preview/index'\r\nimport VideoPreview from './supports/video-preview/index'\r\nimport type {IPreviewRule} from './preview.interface'\r\nimport {PreviewType} from './preview.interface'\r\n\r\nexport const textFilePreviewTypeList = [PreviewType.CODE, PreviewType.TXT, PreviewType.MD]\r\nexport const arrayBufferPreviewTypeList = [PreviewType.DOC, PreviewType.DOCX, PreviewType.XLSX, PreviewType.PPT, PreviewType.EPUB]\r\nexport const imagePreviewTypeList = [PreviewType.PIC, PreviewType.AUDIO]\r\nexport const pdfPreviewTypeList = [PreviewType.PDF]\r\nexport const videoPreviewTypeList = [PreviewType.VIDEO]\r\n\r\nexport const PreviewRules: Record<PreviewType, IPreviewRule> = {\r\n    [PreviewType.NONE]: {\r\n        name: '',\r\n        component: void 0,\r\n        type: PreviewType.NONE,\r\n        accept: [],\r\n    },\r\n    [PreviewType.CODE]: {\r\n        name: '',\r\n        component: CodePreview,\r\n        type: PreviewType.CODE,\r\n        accept: ['html', 'css', 'less', 'scss', 'js', 'json', 'ts', 'vue', 'c', 'cpp', 'java', 'py', 'go', 'php', 'lua', 'rb', 'pl', 'swift', 'vb', 'cs', 'sh', 'rs', 'vim', 'log', 'lock', 'swift', 'mod', 'mht', 'mhtml', 'xml'],\r\n    },\r\n    [PreviewType.DOC]: {\r\n        name: '',\r\n        component: void 0,\r\n        type: PreviewType.DOC,\r\n        accept: ['doc', 'docm', 'dot', 'dotm', 'dotx', 'fodt', 'mht', 'odt', 'ott', 'rtf', 'djvu', 'xps'],\r\n    },\r\n    [PreviewType.DOCX]: {\r\n        name: '',\r\n        component: DocxPreview,\r\n        type: PreviewType.DOCX,\r\n        accept: ['docx'],\r\n    },\r\n    [PreviewType.XLSX]: {\r\n        name: '',\r\n        component: XlsxPreview,\r\n        type: PreviewType.XLSX,\r\n        accept: ['xlsx', 'xls', 'csv', 'fods', 'ods', 'ots', 'xlsm', 'xlt', 'xltm'],\r\n    },\r\n    // ppt: presentation\r\n    [PreviewType.PPT]: {\r\n        name: '',\r\n        component: void 0,\r\n        type: PreviewType.PPT,\r\n        accept: ['ppt', 'pptx', 'fodp', 'odp', 'otp', 'pot', 'potm', 'potx', 'pps', 'ppsm', 'ppsx', 'pptm'],\r\n    },\r\n    [PreviewType.PDF]: {\r\n        name: '',\r\n        component: PdfPreview,\r\n        type: PreviewType.PDF,\r\n        accept: ['pdf'],\r\n    },\r\n    [PreviewType.EPUB]: {\r\n        name: '',\r\n        component: EpubPreview,\r\n        type: PreviewType.EPUB,\r\n        accept: ['epub'],\r\n    },\r\n    [PreviewType.MD]: {\r\n        name: '',\r\n        component: MdPreview,\r\n        type: PreviewType.MD,\r\n        accept: ['md'],\r\n    },\r\n    [PreviewType.PIC]: {\r\n        name: '',\r\n        component: PicPreview,\r\n        type: PreviewType.PIC,\r\n        accept: ['jpg', 'png', 'jpeg', 'webp', 'gif', 'bmp', 'svg', 'ico'],\r\n    },\r\n    [PreviewType.TXT]: {\r\n        name: '',\r\n        component: TxtPreview,\r\n        type: PreviewType.TXT,\r\n        accept: ['txt'],\r\n    },\r\n    [PreviewType.AUDIO]: {\r\n        name: '',\r\n        component: AudioPreview,\r\n        type: PreviewType.AUDIO,\r\n        accept: ['mp3', 'wav', 'wma', 'ogg', 'aac', 'flac'],\r\n    },\r\n    [PreviewType.VIDEO]: {\r\n        name: '',\r\n        component: VideoPreview,\r\n        type: PreviewType.VIDEO,\r\n        accept: ['mp4', 'webm', 'ogg', 'mkv', 'avi', 'mpeg', 'flv', 'mov', 'wmv'],\r\n    },\r\n}\r\n\r\n/**\r\n * Get based on file type\r\n * @param type\r\n */\r\nexport function getRuleByFileType(type: string): IPreviewRule {\r\n    return Object.values(PreviewRules).find(cur => cur.accept.includes(type)) ?? PreviewRules[PreviewType.NONE]\r\n}\r\n\r\n/**\r\n * Get based on file type\r\n * @param type\r\n */\r\nexport function getPreviewTypeByFileType(type: string): PreviewType {\r\n    return getRuleByFileType(type).type\r\n}\r\n"],"names":["textFilePreviewTypeList","PreviewType","arrayBufferPreviewTypeList","imagePreviewTypeList","pdfPreviewTypeList","videoPreviewTypeList","PreviewRules","CodePreview","DocxPreview","XlsxPreview","PdfPreview","EpubPreview","MdPreview","PicPreview","TxtPreview","AudioPreview","VideoPreview","getRuleByFileType","type","cur","getPreviewTypeByFileType"],"mappings":"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"}