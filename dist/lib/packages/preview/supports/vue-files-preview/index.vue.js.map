{"version":3,"file":"index.vue.js","sources":["../../../../../../packages/preview/supports/vue-files-preview/index.vue"],"sourcesContent":["<script lang=\"ts\" setup>\r\nimport { watch } from 'vue'\r\nimport { PreviewRules, getPreviewTypeByFileType } from '../../preview.const'\r\nimport type { IPreviewRule, PreviewProps } from '../../preview.interface'\r\nimport { PreviewType } from '../../preview.interface'\r\nimport { getFileName, getFileType } from '../../utils/utils'\r\n\r\nconst props = withDefaults(\r\n  defineProps<PreviewProps & {\r\n    width?: string\r\n    height?: string\r\n    overflow?: string\r\n  }>(),\r\n  {\r\n    file: () => null,\r\n    url: () => null,\r\n    width: () => '100%',\r\n    height: () => '100%',\r\n    overflow: () => 'auto',\r\n  },\r\n)\r\n\r\nconst currentPreview = shallowRef<IPreviewRule>(PreviewRules[PreviewType.NONE])\r\n\r\nfunction syncPreview(file: File): void {\r\n  const preview = PreviewRules[getPreviewTypeByFileType(getFileType(file))]\r\n  if (preview) {\r\n    preview.name = getFileName(file)\r\n    currentPreview.value = preview\r\n  }\r\n}\r\n\r\nwatch(\r\n  () => props.file,\r\n  (file) => {\r\n    if (file) {\r\n      syncPreview(file)\r\n    }\r\n  },\r\n  { immediate: true },\r\n)\r\n</script>\r\n\r\n<template>\r\n  <div class=\"vue-files-preview\" :style=\"{ width, height, overflow }\">\r\n    <component :is=\"currentPreview.component\" :name=\"currentPreview.name\" :file=\"file\" :url=\"url\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\"></style>\r\n"],"names":["props","__props","currentPreview","shallowRef","PreviewRules","PreviewType","syncPreview","file","preview","getPreviewTypeByFileType","getFileType","getFileName","watch"],"mappings":"mVAOA,MAAMA,EAAQC,EAeRC,EAAiBC,EAAAA,WAAyBC,EAAAA,aAAaC,EAAAA,YAAY,IAAI,CAAC,EAE9E,SAASC,EAAYC,EAAkB,CACrC,MAAMC,EAAUJ,EAAAA,aAAaK,EAAAA,yBAAyBC,EAAAA,YAAYH,CAAI,CAAC,CAAC,EACpEC,IACFA,EAAQ,KAAOG,EAAAA,YAAYJ,CAAI,EAC/BL,EAAe,MAAQM,EAE3B,CAEAI,OAAAA,EAAAA,MACE,IAAMZ,EAAM,KACXO,GAAS,CACJA,GACFD,EAAYC,CAAI,CAEpB,EACA,CAAE,UAAW,EAAA,CAAK"}