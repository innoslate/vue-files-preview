{"version":3,"file":"utils.js","sources":["../../../../../packages/preview/utils/utils.ts"],"sourcesContent":["import type {FileRenderType, PreviewType} from '../preview.interface'\r\nimport {\r\n    arrayBufferPreviewTypeList,\r\n    getPreviewTypeByFileType,\r\n    imagePreviewTypeList,\r\n    pdfPreviewTypeList,\r\n    textFilePreviewTypeList,\r\n    videoPreviewTypeList,\r\n} from '../preview.const'\r\n\r\n/**\r\n * Get file type\r\n * @param file\r\n */\r\nexport function getFileType(file: File): string {\r\n    const fileName = file.name\r\n    const idx = fileName.lastIndexOf('.')\r\n    return fileName.substring(idx + 1)\r\n}\r\n\r\n/**\r\n * Get file name\r\n * @param file\r\n */\r\nexport function getFileName(file: File): string {\r\n    const fileAllName = file.name\r\n    const idx = fileAllName.lastIndexOf('.')\r\n    return fileAllName.substring(0, idx)\r\n}\r\n\r\n/**\r\n * Get by file type\r\n */\r\nexport function getFileRenderByFile(file: File): Promise<ArrayBuffer | string> {\r\n    const previewType = getPreviewTypeByFileType(getFileType(file))\r\n    const renderType = getFileRenderType(previewType)\r\n    return new Promise((resolve) => {\r\n        const raw = file\r\n        const fileReader = new FileReader()\r\n        switch (renderType) {\r\n            case 'text':\r\n                fileReader.readAsText(raw)\r\n                fileReader.onload = () => {\r\n                    resolve(fileReader.result)\r\n                }\r\n                break\r\n            case 'arrayBuffer':\r\n                fileReader.readAsArrayBuffer(raw)\r\n                fileReader.onload = () => {\r\n                    resolve(fileReader.result)\r\n                }\r\n                break\r\n            case 'image':\r\n                resolve(window.URL.createObjectURL(raw))\r\n                break\r\n            case 'pdf': {\r\n                const pdfBloBlob = new Blob([raw], {type: 'application/pdf'})\r\n                const pdfBlobUrl = URL.createObjectURL(pdfBloBlob)\r\n                resolve(pdfBlobUrl)\r\n                break\r\n            }\r\n            case 'video': {\r\n                const videoBlobUrl = URL.createObjectURL(new Blob([raw], {type: 'video/mp4'}))\r\n                resolve(videoBlobUrl)\r\n                break\r\n            }\r\n            default:\r\n                resolve(window.URL.createObjectURL(raw))\r\n                break\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * Get the file rendering data type\r\n * @param previewType\r\n */\r\nexport function getFileRenderType(previewType: PreviewType): FileRenderType {\r\n    const types: Record<FileRenderType, boolean> = {\r\n        text: textFilePreviewTypeList.includes(previewType),\r\n        arrayBuffer: arrayBufferPreviewTypeList.includes(previewType),\r\n        image: imagePreviewTypeList.includes(previewType),\r\n        pdf: pdfPreviewTypeList.includes(previewType),\r\n        video: videoPreviewTypeList.includes(previewType),\r\n    }\r\n    return Object.keys(types)!.find(key => types[key]) as FileRenderType\r\n}\r\n"],"names":["getFileType","file","fileName","idx","getFileName","fileAllName","getFileRenderByFile","previewType","getPreviewTypeByFileType","renderType","getFileRenderType","resolve","raw","fileReader","pdfBloBlob","pdfBlobUrl","videoBlobUrl","types","textFilePreviewTypeList","arrayBufferPreviewTypeList","imagePreviewTypeList","pdfPreviewTypeList","videoPreviewTypeList","key"],"mappings":"uHAcO,SAASA,EAAYC,EAAoB,CAC5C,MAAMC,EAAWD,EAAK,KAChBE,EAAMD,EAAS,YAAY,GAAG,EACpC,OAAOA,EAAS,UAAUC,EAAM,CAAC,CACrC,CAMO,SAASC,EAAYH,EAAoB,CAC5C,MAAMI,EAAcJ,EAAK,KACnBE,EAAME,EAAY,YAAY,GAAG,EACvC,OAAOA,EAAY,UAAU,EAAGF,CAAG,CACvC,CAKO,SAASG,EAAoBL,EAA2C,CAC3E,MAAMM,EAAcC,EAAAA,yBAAyBR,EAAYC,CAAI,CAAC,EACxDQ,EAAaC,EAAkBH,CAAW,EAChD,OAAO,IAAI,QAASI,GAAY,CAC5B,MAAMC,EAAMX,EACNY,EAAa,IAAI,WACvB,OAAQJ,EAAA,CACJ,IAAK,OACDI,EAAW,WAAWD,CAAG,EACzBC,EAAW,OAAS,IAAM,CACtBF,EAAQE,EAAW,MAAM,CAC7B,EACA,MACJ,IAAK,cACDA,EAAW,kBAAkBD,CAAG,EAChCC,EAAW,OAAS,IAAM,CACtBF,EAAQE,EAAW,MAAM,CAC7B,EACA,MACJ,IAAK,QACDF,EAAQ,OAAO,IAAI,gBAAgBC,CAAG,CAAC,EACvC,MACJ,IAAK,MAAO,CACR,MAAME,EAAa,IAAI,KAAK,CAACF,CAAG,EAAG,CAAC,KAAM,kBAAkB,EACtDG,EAAa,IAAI,gBAAgBD,CAAU,EACjDH,EAAQI,CAAU,EAClB,KACJ,CACA,IAAK,QAAS,CACV,MAAMC,EAAe,IAAI,gBAAgB,IAAI,KAAK,CAACJ,CAAG,EAAG,CAAC,KAAM,WAAA,CAAY,CAAC,EAC7ED,EAAQK,CAAY,EACpB,KACJ,CACA,QACIL,EAAQ,OAAO,IAAI,gBAAgBC,CAAG,CAAC,EACvC,KAAA,CAEZ,CAAC,CACL,CAMO,SAASF,EAAkBH,EAA0C,CACxE,MAAMU,EAAyC,CAC3C,KAAMC,EAAAA,wBAAwB,SAASX,CAAW,EAClD,YAAaY,EAAAA,2BAA2B,SAASZ,CAAW,EAC5D,MAAOa,EAAAA,qBAAqB,SAASb,CAAW,EAChD,IAAKc,EAAAA,mBAAmB,SAASd,CAAW,EAC5C,MAAOe,EAAAA,qBAAqB,SAASf,CAAW,CAAA,EAEpD,OAAO,OAAO,KAAKU,CAAK,EAAG,KAAKM,GAAON,EAAMM,CAAG,CAAC,CACrD"}