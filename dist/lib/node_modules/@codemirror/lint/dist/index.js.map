{"version":3,"file":"index.js","sources":["../../../../../../node_modules/@codemirror/lint/dist/index.js"],"sourcesContent":["import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet, RangeSetBuilder } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            diagnostics = diagnosticFilter(diagnostics, state);\n        let sorted = diagnostics.slice().sort((a, b) => a.from - b.from || a.to - b.to);\n        let deco = new RangeSetBuilder(), active = [], pos = 0;\n        for (let i = 0;;) {\n            let next = i == sorted.length ? null : sorted[i];\n            if (!next && !active.length)\n                break;\n            let from, to;\n            if (active.length) {\n                from = pos;\n                to = active.reduce((p, d) => Math.min(p, d.to), next && next.from > from ? next.from : 1e8);\n            }\n            else {\n                from = next.from;\n                to = next.to;\n                active.push(next);\n                i++;\n            }\n            while (i < sorted.length) {\n                let next = sorted[i];\n                if (next.from == from && (next.to > next.from || next.to == from)) {\n                    active.push(next);\n                    i++;\n                    to = Math.min(next.to, to);\n                }\n                else {\n                    to = Math.min(next.from, to);\n                    break;\n                }\n            }\n            let sev = maxSeverity(active);\n            if (active.some(d => d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from))) {\n                deco.add(from, from, Decoration.widget({\n                    widget: new DiagnosticWidget(sev),\n                    diagnostics: active.slice()\n                }));\n            }\n            else {\n                let markClass = active.reduce((c, d) => d.markClass ? c + \" \" + d.markClass : c, \"\");\n                deco.add(from, to, Decoration.mark({\n                    class: \"cm-lintRange cm-lintRange-\" + sev + markClass,\n                    diagnostics: active.slice(),\n                    inclusiveEnd: active.some(a => a.to > to)\n                }));\n            }\n            pos = to;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to <= pos)\n                    active.splice(i--, 1);\n        }\n        let set = deco.finish();\n        return new LintState(set, panel, findDiagnostic(set));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostics.indexOf(diagnostic) < 0)\n            return;\n        if (!found)\n            found = new SelectedDiagnostic(from, to, diagnostic || spec.diagnostics[0]);\n        else if (spec.diagnostics.indexOf(found.diagnostic) < 0)\n            return false;\n        else\n            found = new SelectedDiagnostic(found.from, to, found.diagnostic);\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found, start = -1, end = -1;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found = spec.diagnostics;\n            start = from;\n            end = to;\n            return false;\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (found && diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found)\n        return null;\n    return {\n        pos: start,\n        end: end,\n        above: view.state.doc.lineAt(start).to < end,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nfunction batchResults(promises, sink, error) {\n    let collected = [], timeout = -1;\n    for (let p of promises)\n        p.then(value => {\n            collected.push(value);\n            clearTimeout(timeout);\n            if (collected.length == promises.length)\n                sink(collected);\n            else\n                timeout = setTimeout(() => sink(collected), 200);\n        }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(sev) {\n        super();\n        this.sev = sev;\n    }\n    eq(other) { return other.sev == this.sev; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.sev });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        let seen = new Set();\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            for (let diagnostic of spec.diagnostics) {\n                if (seen.has(diagnostic))\n                    continue;\n                seen.add(diagnostic);\n                let found = -1, item;\n                for (let j = i; j < this.items.length; j++)\n                    if (this.items[j].diagnostic == diagnostic) {\n                        found = j;\n                        break;\n                    }\n                if (found < 0) {\n                    item = new PanelItem(this.view, diagnostic);\n                    this.items.splice(i, 0, item);\n                    needsSync = true;\n                }\n                else {\n                    item = this.items[found];\n                    if (found > i) {\n                        this.items.splice(i, found - i);\n                        needsSync = true;\n                    }\n                }\n                if (selected && item.diagnostic == selected.diagnostic) {\n                    if (!item.dom.hasAttribute(\"aria-selected\")) {\n                        item.dom.setAttribute(\"aria-selected\", \"true\");\n                        newSelectedItem = item;\n                    }\n                }\n                else if (item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.removeAttribute(\"aria-selected\");\n                }\n                i++;\n            }\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nfunction maxSeverity(diagnostics) {\n    let sev = \"hint\", weight = 1;\n    for (let d of diagnostics) {\n        let w = severityWeight(d.severity);\n        if (w > weight) {\n            weight = w;\n            sev = d.severity;\n        }\n    }\n    return sev;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = maxSeverity(diagnostics);\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    clip: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n    widgetMarker: (view, widget, block) => {\n        let diagnostics = [];\n        view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n            if (from > block.from && from < block.to)\n                diagnostics.push(...value.diagnostics);\n        });\n        return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n    }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size) {\n        let pending = [], pendingStart = [], lastEnd = -1;\n        for (let iter = RangeSet.iter([lState.diagnostics]);; iter.next()) {\n            for (let i = 0; i < pending.length; i++)\n                if (!iter.value || iter.value.spec.diagnostics.indexOf(pending[i]) < 0) {\n                    f(pending[i], pendingStart[i], lastEnd);\n                    pending.splice(i, 1);\n                    pendingStart.splice(i--, 1);\n                }\n            if (!iter.value)\n                break;\n            for (let d of iter.value.spec.diagnostics)\n                if (pending.indexOf(d) < 0) {\n                    pending.push(d);\n                    pendingStart.push(iter.from);\n                }\n            lastEnd = iter.to;\n        }\n    }\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n"],"names":["SelectedDiagnostic","from","to","diagnostic","LintState","diagnostics","panel","selected","state","diagnosticFilter","lintConfig","sorted","b","deco","RangeSetBuilder","active","pos","i","next","p","d","sev","maxSeverity","Decoration","DiagnosticWidget","markClass","c","a","set","findDiagnostic","after","found","spec","hideTooltip","tr","tooltip","result","line","e","setDiagnosticsEffect","maybeEnableLint","effects","lintState","StateEffect","lintExtensions","togglePanel","movePanelSelection","StateField","value","mapped","selPos","effect","LintPanel","f","showPanel","val","EditorView","s","activeMark","lintTooltip","view","side","start","end","diagnosticsTooltip","elt","renderDiagnostic","openLintPanel","field","getPanel","closeLintPanel","nextDiagnostic","sel","lintKeymap","Facet","input","x","combineConfig","u","assignKeys","actions","assigned","name","ch","inPanel","_a","keys","action","fired","click","keyIndex","nameElt","WidgetType","other","PanelItem","onkeydown","event","onclick","needsSync","newSelectedItem","seen","_start","_end","item","j","scaleY","domPos","rm","prev","selectedIndex","selection","svg","content","attrs","underline","color","baseTheme","severityWeight","weight","w","hoverTooltip"],"mappings":"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","x_google_ignoreList":[0]}