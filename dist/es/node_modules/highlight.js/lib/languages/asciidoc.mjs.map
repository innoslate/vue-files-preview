{"version":3,"file":"asciidoc.mjs","sources":["../../../../../../node_modules/highlight.js/lib/languages/asciidoc.js"],"sourcesContent":["/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  const regex = hljs.regex;\n  const HORIZONTAL_RULE = {\n    begin: '^\\'{3,}[ \\\\t]*$',\n    relevance: 10\n  };\n  const ESCAPED_FORMATTING = [\n    // escaped constrained formatting marks (i.e., \\* \\_ or \\`)\n    { begin: /\\\\[*_`]/ },\n    // escaped unconstrained formatting marks (i.e., \\\\** \\\\__ or \\\\``)\n    // must ignore until the next formatting marks\n    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\n    { begin: /\\\\\\\\\\*{2}[^\\n]*?\\*{2}/ },\n    { begin: /\\\\\\\\_{2}[^\\n]*_{2}/ },\n    { begin: /\\\\\\\\`{2}[^\\n]*`{2}/ },\n    // guard: constrained formatting mark may not be preceded by \":\", \";\" or\n    // \"}\". match these so the constrained rule doesn't see them\n    { begin: /[:;}][*_`](?![*_`])/ }\n  ];\n  const STRONG = [\n    // inline unconstrained strong (single line)\n    {\n      className: 'strong',\n      begin: /\\*{2}([^\\n]+?)\\*{2}/\n    },\n    // inline unconstrained strong (multi-line)\n    {\n      className: 'strong',\n      begin: regex.concat(\n        /\\*\\*/,\n        /((\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])+\\n)+/,\n        /(\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])*/,\n        /\\*\\*/\n      ),\n      relevance: 0\n    },\n    // inline constrained strong (single line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\B\\*(\\S|\\S[^\\n]*?\\S)\\*(?!\\w)/\n    },\n    // inline constrained strong (multi-line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\*[^\\s]([^\\n]+\\n)+([^\\n]+)\\*/\n    }\n  ];\n  const EMPHASIS = [\n    // inline unconstrained emphasis (single line)\n    {\n      className: 'emphasis',\n      begin: /_{2}([^\\n]+?)_{2}/\n    },\n    // inline unconstrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      begin: regex.concat(\n        /__/,\n        /((_(?!_)|\\\\[^\\n]|[^_\\n\\\\])+\\n)+/,\n        /(_(?!_)|\\\\[^\\n]|[^_\\n\\\\])*/,\n        /__/\n      ),\n      relevance: 0\n    },\n    // inline constrained emphasis (single line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /\\b_(\\S|\\S[^\\n]*?\\S)_(?!\\w)/\n    },\n    // inline constrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /_[^\\s]([^\\n]+\\n)+([^\\n]+)_/\n    },\n    // inline constrained emphasis using single quote (legacy)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [\n        {\n          begin: '\\\\\\\\\\'\\\\w',\n          relevance: 0\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  const ADMONITION = {\n    className: 'symbol',\n    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n    relevance: 10\n  };\n  const BULLET_LIST = {\n    className: 'bullet',\n    begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n  };\n\n  return {\n    name: 'AsciiDoc',\n    aliases: [ 'adoc' ],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        // '^/{4,}$',\n        // '^/{4,}$',\n        { relevance: 10 }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        { relevance: 0 }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          { begin: '^(={1,6})[ \\t].+?([ \\t]\\\\1)?$' },\n          { begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$' }\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [\n          {\n            begin: '<',\n            end: '>',\n            subLanguage: 'xml',\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      },\n\n      BULLET_LIST,\n      ADMONITION,\n      ...ESCAPED_FORMATTING,\n      ...STRONG,\n      ...EMPHASIS,\n\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          { begin: \"``.+?''\" },\n          { begin: \"`.+?'\" }\n        ]\n      },\n      // inline unconstrained emphasis\n      {\n        className: 'code',\n        begin: /`{2}/,\n        end: /(\\n{2}|`{2})/\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      HORIZONTAL_RULE,\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n}\n\nmodule.exports = asciidoc;\n"],"names":["asciidoc","hljs","regex","HORIZONTAL_RULE","ESCAPED_FORMATTING","STRONG","EMPHASIS","ADMONITION","BULLET_LIST","asciidoc_1"],"mappings":"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","x_google_ignoreList":[0]}