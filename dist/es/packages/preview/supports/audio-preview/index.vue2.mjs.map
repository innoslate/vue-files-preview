{"version":3,"file":"index.vue2.mjs","sources":["../../../../../../packages/preview/supports/audio-preview/index.vue"],"sourcesContent":["<script lang='ts' setup>\r\nimport {computed, getCurrentInstance, onBeforeMount, onMounted, ref} from 'vue'\r\nimport type {PreviewProps} from '../../preview.interface'\r\nimport {getFileRenderByFile} from '../../utils/utils'\r\n\r\nconst props = withDefaults(\r\n    defineProps<PreviewProps>(),\r\n    {\r\n      file: () => null,\r\n      name: () => null,\r\n    },\r\n)\r\n\r\nconst {proxy} = getCurrentInstance() as any\r\n\r\nconst audioDom = ref()\r\nconst ulDom = ref()\r\nconst containerDom = ref()\r\nconst canvasDom = ref()\r\nconst ctx = ref()\r\nconst isInit = ref(false)\r\nconst analyser = ref()\r\nconst dataSource = ref()\r\nconst mode = ref('Wavy')\r\nconst src = ref(null)\r\n\r\n/**\r\n * Initialization Dom\r\n */\r\nfunction initDom(): void {\r\n  audioDom.value = proxy.$refs.audioRef as HTMLAudioElement\r\n  ulDom.value = proxy.$refs.ulRef as HTMLUListElement\r\n  containerDom.value = proxy.$refs.containerRef as HTMLDivElement\r\n  canvasDom.value = proxy.$refs.canvasRef as HTMLDivElement\r\n  ctx.value = canvasDom.value.getContext('2d')\r\n}\r\n\r\nconst containerHeight = computed(() => {\r\n  return containerDom.value?.clientHeight\r\n})\r\nconst liHeight = computed(() => {\r\n  return ulDom.value.children[0]?.clientHeight\r\n})\r\nconst maxOffset = computed(() => {\r\n  return ulDom.value?.clientHeight - containerHeight.value\r\n})\r\n\r\n/**\r\n * Initialization canvas\r\n */\r\nfunction initCanvas() {\r\n  canvasDom.value.width = window.innerWidth * devicePixelRatio\r\n  canvasDom.value.height = 300\r\n}\r\n\r\n/**\r\n * Audio playback\r\n */\r\nfunction audioPlay() {\r\n  audioDom.value.onplay = () => {\r\n    if (isInit.value)\r\n      return\r\n    const audCtx = new AudioContext() // 音频上下文\r\n    const source = audCtx.createMediaElementSource(audioDom.value) // 音频源节点\r\n    analyser.value = audCtx.createAnalyser()\r\n    analyser.value.fftSize = 512\r\n    dataSource.value = new Uint8Array(analyser.value.frequencyBinCount)\r\n    source.connect(analyser.value)\r\n    analyser.value.connect(audCtx.destination)\r\n\r\n    isInit.value = true\r\n  }\r\n}\r\n\r\n// Columnar\r\nfunction drawColumnar() {\r\n  requestAnimationFrame(drawColumnar)\r\n  const {width, height} = canvasDom.value\r\n  ctx.value.clearRect(0, 0, width, height)\r\n  if (!isInit.value)\r\n    return\r\n  if (dataSource.value) {\r\n    analyser.value && analyser.value.getByteFrequencyData(dataSource.value)\r\n\r\n    const len = dataSource.value.length\r\n    const barWidth = width / len\r\n    ctx.value.fillStyle = 'skyblue'\r\n    dataSource.value.forEach((v, i) => {\r\n      const barHeight = v / 255 * height\r\n      const x = i * barWidth\r\n      const y = height - barHeight\r\n      ctx.value.fillRect(x, y, barWidth, barHeight)\r\n    })\r\n  }\r\n}\r\n\r\n// Wave\r\nfunction drawWavy() {\r\n  requestAnimationFrame(drawWavy)\r\n  const {width, height} = canvasDom.value\r\n  ctx.value.clearRect(0, 0, width, height)\r\n  if (!isInit.value)\r\n    return\r\n  if (dataSource.value) {\r\n    analyser.value && analyser.value.getByteFrequencyData(dataSource.value)\r\n\r\n    const len = dataSource.value.length\r\n    const sliceWidth = width * 1.0 / len\r\n    let x = 0\r\n\r\n    ctx.value.beginPath()\r\n    ctx.value.strokeStyle = 'skyblue'\r\n    dataSource.value.forEach((v, i) => {\r\n      const vNormalized = v / 255\r\n      const y = vNormalized * height / 2\r\n\r\n      if (i === 0)\r\n        ctx.value.moveTo(x, y)\r\n      else\r\n        ctx.value.lineTo(x, y)\r\n\r\n      x += sliceWidth\r\n    })\r\n\r\n    ctx.value.lineTo(width, height / 2)\r\n    ctx.value.stroke()\r\n  }\r\n}\r\n\r\n/**\r\n * Switch mode\r\n */\r\nfunction changeMode() {\r\n  mode.value = mode.value === 'Columnar' ? 'Wavy' : 'Columnar'\r\n  mode.value == 'Columnar' ? drawColumnar() : drawWavy()\r\n}\r\n\r\nonBeforeMount(() => {\r\n  getFileRenderByFile(props.file).then((render) => {\r\n    src.value = render\r\n  })\r\n})\r\nonMounted(() => {\r\n  initDom() // Initialization Dom\r\n  audioPlay() // Audio playback\r\n  initCanvas() // Initialization canvas\r\n  drawWavy() // Draw waves\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"audio-preview music-container flex flex-column flex-align\">\r\n    <div class=\"audio-container flex-align\">\r\n      <div class=\"flex-column\" style=\"margin-left: 0.5rem;\">\r\n        <div style=\"font-size: 1.6rem; color: #999;\">\r\n          {{ name }}\r\n        </div>\r\n      </div>\r\n      <div class=\"mp3Box\">\r\n        <audio ref=\"audioRef\" controls :src=\"src\"/>\r\n      </div>\r\n      <div>\r\n        <el-button link @click=\"changeMode\">\r\n          {{ mode }}\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"cvs-container\">\r\n      <canvas ref=\"canvasRef\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.music-container {\r\n  height: 100vh;\r\n  background: #1b1d1d;\r\n\r\n  audio {\r\n    width: 450px;\r\n    margin: 0 1.2rem;\r\n    background: #303233;\r\n    border-radius: 54px;\r\n  }\r\n\r\n  audio::-webkit-media-controls-panel {\r\n    background-image: initial;\r\n    background-color: #777;\r\n    transition: none;\r\n  }\r\n\r\n  audio::-webkit-media-controls-current-time-display,\r\n  audio::-webkit-media-controls-time-remaining-display {\r\n    background: #777;\r\n    text-shadow: none;\r\n  }\r\n\r\n  .audio-container {\r\n    height: 5.2rem;\r\n    // border: 1px solid #777;\r\n  }\r\n\r\n  .lrc-container {\r\n    width: 100%;\r\n    padding-top: 30px;\r\n    flex: 1;\r\n    height: 220px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    &::before,\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100px;\r\n      background: linear-gradient(to bottom, rgba(27, 29, 29, 1), rgba(255, 255, 255, 0));\r\n      pointer-events: none;\r\n    }\r\n\r\n    &::before {\r\n      top: 0;\r\n    }\r\n\r\n    &::after {\r\n      bottom: 0;\r\n      transform: rotate(180deg);\r\n    }\r\n\r\n    ul {\r\n      transition: 0.6s;\r\n      list-style: none;\r\n      color: #ffffff70;\r\n\r\n      li {\r\n        height: 30px;\r\n        line-height: 30px;\r\n        transition: 0.2s;\r\n\r\n        &.active {\r\n          font-weight: 700;\r\n          color: #fff;\r\n          transform: scale(1.2);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .cvs-container {\r\n    padding-top: 10px;\r\n  }\r\n}\r\n\r\n.flex-column {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.flex-align {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"names":["props","__props","proxy","getCurrentInstance","audioDom","ref","ulDom","containerDom","canvasDom","ctx","isInit","analyser","dataSource","mode","src","initDom","containerHeight","computed","_a","initCanvas","audioPlay","audCtx","source","drawColumnar","width","height","len","barWidth","v","i","barHeight","x","y","drawWavy","sliceWidth","changeMode","onBeforeMount","getFileRenderByFile","render","onMounted"],"mappings":"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"}