{"version":3,"file":"index.vue.mjs","sources":["../../../../../../packages/preview/supports/code-preview/index.vue"],"sourcesContent":["<script lang='ts' setup>\r\nimport {Codemirror} from 'vue-codemirror'\r\nimport {javascript} from '@codemirror/lang-javascript'\r\nimport {json} from '@codemirror/lang-json'\r\nimport {html} from '@codemirror/lang-html'\r\nimport {oneDark} from '@codemirror/theme-one-dark'\r\nimport type {PreviewProps} from '../../preview.interface'\r\nimport {getFileRenderByFile} from '../../utils/utils'\r\n\r\nconst props = withDefaults(\r\n    defineProps<PreviewProps>(),\r\n    {\r\n      url: () => null,\r\n      file: () => null,\r\n    },\r\n)\r\n\r\nconst code = ref()\r\nconst extensions = [javascript(), json(), html(), oneDark]\r\n// Codemirror EditorView instance ref\r\nconst codeViewer = shallowRef()\r\n\r\nfunction handleReady(payload): void {\r\n  codeViewer.value = payload.view\r\n}\r\n\r\nwatch(\r\n    () => props.file,\r\n    () => {\r\n      getFileRenderByFile(props.file).then((render) => {\r\n        code.value = render\r\n      })\r\n    },\r\n    {\r\n      immediate: true,\r\n    },\r\n)\r\n</script>\r\n\r\n<template>\r\n  <div class=\"code-preview\">\r\n    <Codemirror\r\n        v-model=\"code\" :autofocus=\"true\" :indent-with-tab=\"true\" :tab-size=\"2\"\r\n        :extensions=\"extensions\" @ready=\"handleReady\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang='scss'></style>\r\n"],"names":["props","__props","code","ref","extensions","javascript","json","html","oneDark","codeViewer","shallowRef","handleReady","payload","watch","getFileRenderByFile","render"],"mappings":";;;;;;;;;;;;;;;AASA,UAAMA,IAAQC,GAQRC,IAAOC,EAAA,GACPC,IAAa,CAACC,EAAA,GAAcC,KAAQC,EAAA,GAAQC,CAAO,GAEnDC,IAAaC,EAAA;AAEnB,aAASC,EAAYC,GAAe;AAClC,MAAAH,EAAW,QAAQG,EAAQ;AAAA,IAC7B;AAEA,WAAAC;AAAA,MACI,MAAMb,EAAM;AAAA,MACZ,MAAM;AACJ,QAAAc,EAAoBd,EAAM,IAAI,EAAE,KAAK,CAACe,MAAW;AAC/C,UAAAb,EAAK,QAAQa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,MACA;AAAA,QACE,WAAW;AAAA,MAAA;AAAA,IACb;;;;;;;;;;;;;"}