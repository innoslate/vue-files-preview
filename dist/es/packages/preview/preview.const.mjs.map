{"version":3,"file":"preview.const.mjs","sources":["../../../../packages/preview/preview.const.ts"],"sourcesContent":["import DocxPreview from './supports/docx-preview/index'\r\nimport XlsxPreview from './supports/xlsx-preview/index'\r\nimport PdfPreview from './supports/pdf-preview/index'\r\nimport PicPreview from './supports/pic-preview/index'\r\nimport TxtPreview from './supports/txt-preview/index'\r\nimport CodePreview from './supports/code-preview/index'\r\nimport MdPreview from './supports/md-preview/index'\r\nimport EpubPreview from './supports/epub-preview/index'\r\nimport AudioPreview from './supports/audio-preview/index'\r\nimport VideoPreview from './supports/video-preview/index'\r\nimport type {IPreviewRule} from './preview.interface'\r\nimport {PreviewType} from './preview.interface'\r\n\r\nexport const textFilePreviewTypeList = [PreviewType.CODE, PreviewType.TXT, PreviewType.MD]\r\nexport const arrayBufferPreviewTypeList = [PreviewType.DOC, PreviewType.DOCX, PreviewType.XLSX, PreviewType.PPT, PreviewType.EPUB]\r\nexport const imagePreviewTypeList = [PreviewType.PIC, PreviewType.AUDIO]\r\nexport const pdfPreviewTypeList = [PreviewType.PDF]\r\nexport const videoPreviewTypeList = [PreviewType.VIDEO]\r\n\r\nexport const PreviewRules: Record<PreviewType, IPreviewRule> = {\r\n    [PreviewType.NONE]: {\r\n        name: '',\r\n        component: void 0,\r\n        type: PreviewType.NONE,\r\n        accept: [],\r\n    },\r\n    [PreviewType.CODE]: {\r\n        name: '',\r\n        component: CodePreview,\r\n        type: PreviewType.CODE,\r\n        accept: ['html', 'css', 'less', 'scss', 'js', 'json', 'ts', 'vue', 'c', 'cpp', 'java', 'py', 'go', 'php', 'lua', 'rb', 'pl', 'swift', 'vb', 'cs', 'sh', 'rs', 'vim', 'log', 'lock', 'swift', 'mod', 'mht', 'mhtml', 'xml'],\r\n    },\r\n    [PreviewType.DOC]: {\r\n        name: '',\r\n        component: void 0,\r\n        type: PreviewType.DOC,\r\n        accept: ['doc', 'docm', 'dot', 'dotm', 'dotx', 'fodt', 'mht', 'odt', 'ott', 'rtf', 'djvu', 'xps'],\r\n    },\r\n    [PreviewType.DOCX]: {\r\n        name: '',\r\n        component: DocxPreview,\r\n        type: PreviewType.DOCX,\r\n        accept: ['docx'],\r\n    },\r\n    [PreviewType.XLSX]: {\r\n        name: '',\r\n        component: XlsxPreview,\r\n        type: PreviewType.XLSX,\r\n        accept: ['xlsx', 'xls', 'csv', 'fods', 'ods', 'ots', 'xlsm', 'xlt', 'xltm'],\r\n    },\r\n    // ppt: presentation\r\n    [PreviewType.PPT]: {\r\n        name: '',\r\n        component: void 0,\r\n        type: PreviewType.PPT,\r\n        accept: ['ppt', 'pptx', 'fodp', 'odp', 'otp', 'pot', 'potm', 'potx', 'pps', 'ppsm', 'ppsx', 'pptm'],\r\n    },\r\n    [PreviewType.PDF]: {\r\n        name: '',\r\n        component: PdfPreview,\r\n        type: PreviewType.PDF,\r\n        accept: ['pdf'],\r\n    },\r\n    [PreviewType.EPUB]: {\r\n        name: '',\r\n        component: EpubPreview,\r\n        type: PreviewType.EPUB,\r\n        accept: ['epub'],\r\n    },\r\n    [PreviewType.MD]: {\r\n        name: '',\r\n        component: MdPreview,\r\n        type: PreviewType.MD,\r\n        accept: ['md'],\r\n    },\r\n    [PreviewType.PIC]: {\r\n        name: '',\r\n        component: PicPreview,\r\n        type: PreviewType.PIC,\r\n        accept: ['jpg', 'png', 'jpeg', 'webp', 'gif', 'bmp', 'svg', 'ico'],\r\n    },\r\n    [PreviewType.TXT]: {\r\n        name: '',\r\n        component: TxtPreview,\r\n        type: PreviewType.TXT,\r\n        accept: ['txt'],\r\n    },\r\n    [PreviewType.AUDIO]: {\r\n        name: '',\r\n        component: AudioPreview,\r\n        type: PreviewType.AUDIO,\r\n        accept: ['mp3', 'wav', 'wma', 'ogg', 'aac', 'flac'],\r\n    },\r\n    [PreviewType.VIDEO]: {\r\n        name: '',\r\n        component: VideoPreview,\r\n        type: PreviewType.VIDEO,\r\n        accept: ['mp4', 'webm', 'ogg', 'mkv', 'avi', 'mpeg', 'flv', 'mov', 'wmv'],\r\n    },\r\n}\r\n\r\n/**\r\n * Get based on file type\r\n * @param type\r\n */\r\nexport function getRuleByFileType(type: string): IPreviewRule {\r\n    return Object.values(PreviewRules).find(cur => cur.accept.includes(type)) ?? PreviewRules[PreviewType.NONE]\r\n}\r\n\r\n/**\r\n * Get based on file type\r\n * @param type\r\n */\r\nexport function getPreviewTypeByFileType(type: string): PreviewType {\r\n    return getRuleByFileType(type).type\r\n}\r\n"],"names":["textFilePreviewTypeList","PreviewType","arrayBufferPreviewTypeList","imagePreviewTypeList","pdfPreviewTypeList","videoPreviewTypeList","PreviewRules","CodePreview","DocxPreview","XlsxPreview","PdfPreview","EpubPreview","MdPreview","PicPreview","TxtPreview","AudioPreview","VideoPreview","getRuleByFileType","type","cur","getPreviewTypeByFileType"],"mappings":"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"}